security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    access_decision_manager:
        strategy: unanimous
        allow_if_all_abstain: false
    providers:
        user:
            entity:
                class: iikiti\CMS\Entity\Object\User
    password_hashers:
        iikiti\CMS\Entity\Object\User:
            algorithm: auto
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            custom_authenticators:
                - iikiti\CMS\Security\Authentication\MultiFactorAuthenticator
            lazy: true
            #two_factor:
            #    auth_form_path: mfa_login    # The route name you have used in the routes.yaml
            #    check_path: mfa_login_check  # The route name you have used in the routes.yaml
            #    multi_factor: false
            form_login:
                check_path: /login
                failure_path: /login
                login_path: /login
                enable_csrf: true
                default_target_path: html_login
            # configure the form authentication as the entry point for unauthenticated users
            entry_point: form_login
            logout:
                path: /logout
                target: /
                enable_csrf: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: IS_AUTHENTICATED }
        - { path: ^/logout, roles: ROLE_USER }
        - { path: ^/login/mfa, roles: IS_MFA_IN_PROGRESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }
