parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    iikiti\CMS\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Filters/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # Manually configure the SchemaListener to bind the schema parameter.
    # The #[AsDoctrineListener] attribute handles the auto-configuration (tagging).
    # We only need to define the service here to bind the constructor argument.
    iikiti\CMS\Event\Subscriber\DoctrineSchemaSubscriber:
        bind:
            $schema: '%env(DB_SCHEMA)%'

    # Manually configure the SchemaListener to bind the schema parameter.
    # The #[AsDoctrineListener] attribute handles the auto-configuration (tagging).
    # We only need to define the service here to bind the constructor argument.
    iikiti\CMS\Doctrine\SchemaListener:
        bind:
            $schema: '%env(DB_SCHEMA)%'

    # Workflow services
    iikiti\CMS\Workflow\WorkflowManager:
        arguments:
            - '@event_dispatcher'

    iikiti\CMS\Workflow\StepSubscriber:
        arguments:
            - { type: tagged_iterator, tag: workflow.step_provider }
        tags:
            - { name: kernel.event_subscriber }

    # Example step providers
    iikiti\CMS\Workflow\Example\MfaStepProvider:
        tags:
            - { name: workflow.step_provider }

    iikiti\CMS\Workflow\Example\MultiPageFormStepProvider:
        tags:
            - { name: workflow.step_provider }
